name: Build and publish Demo VoD container image to GitHub Container Registry

on:
  push:
    branches:
      - main
    paths:
      - 'demo-vod/*'
      - '.github/workflows/deploy-oke-oci-cli-demo-vod.yml'
    workflow_dispatch:

env:
  IMAGE_NAME: demo-vod-streaming-app

jobs:
  deploy-oci:
    name: Deploy VoD Demo in OCI
    #needs: push-build-image
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    environment: OCI    
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    steps:
      - uses: actions/checkout@v2

      - name: Retrieve the OCID of a named compartment in tenancy
        uses: oracle-actions/run-oci-cli-command@v1.0
        id: find-compartment-id
        with:
          command: 'iam compartment list --compartment-id-in-subtree=true'
          query: "data[?name=='davega'].id"

      - name: Set the ddl-table-name
        id: ddl-table-name
        run: |
          DDL_TABLE=$(cat demo-vod/demo-stream-acct.ddl)
          DDL_TABLE="${DDL_TABLE//$'\n'/' '}"
          DDL_TABLE="${DDL_TABLE//$'\r'/' '}"
          echo $DDL_TABLE
          echo "::set-output name=ddl-table-name::${DDL_TABLE,,}"

      - name: Set the ddl-limits
        id: table-limits
        run: |
          TABLE_LIMITS="{\"maxReadUnits\":50,\"maxStorageInGBs\":25,\"maxWriteUnits\": 50}" 
          echo $TABLE_LIMITS
          echo "::set-output name=table-limits::${TABLE_LIMITS,,}"

      - name: Create NoSQL Table
        uses: oracle-actions/run-oci-cli-command@v1.0
        id: create-table
        with:
          command: 'nosql table create --compartment-id ${{ steps.find-compartment-id.outputs.raw_output }}  --name stream_acct --ddl-statement "${{ steps.ddl-table-name.outputs.ddl-table-name  }}" --table-limits=${{ steps.table-limits.outputs.table-limits  }} --wait-for-state SUCCEEDED --wait-for-state FAILED'

      - name: Retrieve the display name and table limits of the NoSQL tables in my compartment
        uses: oracle-actions/run-oci-cli-command@v1.0
        id: find-tables
        with:
          command: 'nosql table list --compartment-id ${{ steps.find-compartment-id.outputs.raw_output }}'
          query: 'data.items[*].{name:name,tlimits:\"table-limits\"}'

      - name: List the display name and table limits of the NoSQL tables in my compartment
        run: |
          echo ${{ steps.find-tables.outputs.output }} | jq .

      - name: Configure Kubectl for Oracle Container Engine for Kubernetes (OKE)
        uses: oracle-actions/configure-kubectl-oke@v1.0
        id: configure-kubectl-oke-action
        with:
          cluster: ${{ secrets.OKE_CLUSTER_OCID }}        
      - name: Deploy oracle-app-ndcs-deployment and Get all resources
        run:  | 
          #kubectl apply -f ./oracle-app-ndcs-deployment.yaml
          sleep 120
          kubectl get all 

